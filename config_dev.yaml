# /// [Postgres service sample - static config]
# yaml
components_manager:
    components:                      # Configuring components that were registered via component_list
        handler-add-friend:
            path: /add_friend
            task_processor: main-task-processor
            method: POST

        handler-add-route:
            path: /add_route
            task_processor: main-task-processor
            method: POST
        
        handler-approve-friend:
            path: /approve_friend
            task_processor: main-task-processor
            method: POST

        handler-avatar-path:
            path: /avatar_path
            task_processor: main-task-processor
            method: GET
        
        handler-delete-friend:
            path: /delete_friend
            task_processor: main-task-processor
            method: POST

        handler-delete-route:
            path: /delete_route
            task_processor: main-task-processor
            method: POST

        handler-dismiss-friend:
            path: /dismiss_friend
            task_processor: main-task-processor
            method: POST

        handler-friends:
            path: /friends
            task_processor: main-task-processor
            method: GET

        handler-friends-incoming-requests:
            path: /friends/incoming_requests
            task_processor: main-task-processor
            method: GET

        handler-friends-outgoing-requests:
            path: /friends/outgoing_requests
            task_processor: main-task-processor
            method: GET

        handler-edit-route:
            path: /edit_route
            task_processor: main-task-processor
            method: POST

        handler-login:
            path: /login
            task_processor: main-task-processor
            method: POST

        handler-map:
            path: /map
            task_processor: main-task-processor
            method: GET

        handler-register:
            path: /register
            task_processor: main-task-processor
            method: POST

        avatars-database:
            dbconnection: 'postgresql://postgres:driver@localhost:5432/postgres' # postgresql://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]
            blocking_task_processor: fs-task-processor
            dns_resolver: async

        friends-database:
            dbconnection: 'postgresql://postgres:driver@localhost:5432/postgres'
            blocking_task_processor: fs-task-processor
            dns_resolver: async

        friend-requests-database:
            dbconnection: 'postgresql://postgres:driver@localhost:5432/postgres'
            blocking_task_processor: fs-task-processor
            dns_resolver: async

        routes-database:
            dbconnection: 'postgresql://postgres:driver@localhost:5432/postgres'
            blocking_task_processor: fs-task-processor
            dns_resolver: async

        users-database:
            dbconnection: 'postgresql://postgres:driver@localhost:5432/postgres'
            blocking_task_processor: fs-task-processor
            dns_resolver: async
 
        testsuite-support:
 
        server:
            listener:                 # configuring the main listening socket...
                port: 5000            # ...to listen on this port and...
                task_processor: main-task-processor    # ...process incoming requests on this task processor.
        logging:
            fs-task-processor: fs-task-processor
            loggers:
                default:
                    file_path: '@stderr'
                    level: debug
                    overflow_behavior: discard  # Drop logs if the system is too busy to write them down.
 
        tracer:                             # Component that helps to trace execution times and requests in logs.
            service-name: postgres-service  # "You know. You all know exactly who I am. Say my name. " (c)
  
        dynamic-config:                      # Dynamic config storage options, do nothing
            fs-cache-path: ''
        dynamic-config-fallbacks:            # Load options from file and push them into the dynamic config storage.
            fallback-path: dynamic_config_fallback.json
        dns-client:
            fs-task-processor: fs-task-processor
    coro_pool:
        initial_size: 500             # Preallocate 500 coroutines at startup.
        max_size: 1000                # Do not keep more than 1000 preallocated coroutines.
 
    task_processors:                  # Task processor is an executor for coroutine tasks
 
        main-task-processor:          # Make a task processor for CPU-bound coroutine tasks.
            worker_threads: 4         # Process tasks in 4 threads.
            thread_name: main-worker  # OS will show the threads of this task processor with 'main-worker' prefix.
 
        fs-task-processor:            # Make a separate task processor for filesystem bound tasks.
            thread_name: fs-worker
            worker_threads: 4
 
    default_task_processor: main-task-processor
